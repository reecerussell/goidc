name: Generate Token

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: |
          chmod +x ./scripts/build.sh
          ./scripts/build.sh
        env:
          NAME: generate-token
          VERSION: ${{ github.run_id }}
          WORKING_DIRECTORY: cmd/generate-token

      - name: Archive Build Artifacts
        if: (github.ref == 'ref/heads/master' && github.event_name == 'push') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: "generate-token.${{ github.run_id }}.zip"
      
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: (github.ref == 'ref/heads/master' && github.event_name == 'push') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: dist/

      - name: Upload To S3
        run: |
          chmod +x ./scripts/publish.sh
          ./scripts/publish.sh
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          FILE: dist/generate-token.${{github.run_id}}.zip
          S3_BUCKET: ${{ secrets.S3_SOURCE_BUCKET }}
          S3_KEY: generate-token/${{github.run_id}}.zip

  deployDev:
    name: Deploy Dev
    runs-on: ubuntu-latest
    if: (github.ref == 'ref/heads/master' && github.event_name == 'push') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_SOURCE_BUCKET }}
          SOURCE_ZIP: generate-token/${{github.run_id}}.zip
          NAME: generate-token
          ENV: dev

  deployTest:
    name: Deploy Test
    runs-on: ubuntu-latest
    if: (github.ref == 'ref/heads/master' && github.event_name == 'push') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_SOURCE_BUCKET }}
          SOURCE_ZIP: generate-token/${{github.run_id}}.zip
          NAME: generate-token
          ENV: test

  deployProd:
    name: Deploy Prod
    runs-on: ubuntu-latest
    if: (github.ref == 'ref/heads/master' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
    needs: publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_SOURCE_BUCKET }}
          SOURCE_ZIP: generate-token/${{github.run_id}}.zip
          NAME: generate-token
          ENV: prod
