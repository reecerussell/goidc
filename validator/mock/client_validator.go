// Code generated by MockGen. DO NOT EDIT.
// Source: ../client_validator.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	dal "github.com/reecerussell/goidc/dal"
	reflect "reflect"
)

// MockClientValidator is a mock of ClientValidator interface.
type MockClientValidator struct {
	ctrl     *gomock.Controller
	recorder *MockClientValidatorMockRecorder
}

// MockClientValidatorMockRecorder is the mock recorder for MockClientValidator.
type MockClientValidatorMockRecorder struct {
	mock *MockClientValidator
}

// NewMockClientValidator creates a new mock instance.
func NewMockClientValidator(ctrl *gomock.Controller) *MockClientValidator {
	mock := &MockClientValidator{ctrl: ctrl}
	mock.recorder = &MockClientValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientValidator) EXPECT() *MockClientValidatorMockRecorder {
	return m.recorder
}

// ValidateRequest mocks base method.
func (m *MockClientValidator) ValidateRequest(c *dal.Client, secret, redirectUri, grantType string, scopes []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRequest", c, secret, redirectUri, grantType, scopes)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateRequest indicates an expected call of ValidateRequest.
func (mr *MockClientValidatorMockRecorder) ValidateRequest(c, secret, redirectUri, grantType, scopes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRequest", reflect.TypeOf((*MockClientValidator)(nil).ValidateRequest), c, secret, redirectUri, grantType, scopes)
}
